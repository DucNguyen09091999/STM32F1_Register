/*
 * gpio.c
 *
 *  Created on: Jan 3, 2022
 *      Author: Nguyen Chi Duc

 */


#include "gpio.h"

/*
 * @brief LEDs GPIO configuration PB13
 */
void gpio_LEDs_Configuration(void)
{
//Enable clock for portB
  RCC->APB2ENR |= RCC_APB2ENR_IOPBEN;
  //Configuration GPIO as output 2MHz
  GPIOB->CRH &= ~(GPIO_CRH_MODE13);
  GPIOB->CRH |=  (GPIO_CRH_MODE13_1);

  //Set up push - pull output
  GPIOB->CRH &= ~(GPIO_CRH_CNF13);


}

/*
 * @brief Write function
 */

void gpio_LEDs_WritePB13(bool state)
{
  if(state)
  {
    GPIOB->ODR |= (0x1UL <<(13U));
  }
  else
  {
    GPIOB->ODR &= ~(0x1UL <<(13U));
  }
}





/*
 *@brief Switch configuration
 */
void gpio_SW_Configuration(void)
{
	//Enable clock for portA
	  RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;
	  //Configuration GPIO as input mode
	  GPIOA->CRH &= ~(GPIO_CRH_MODE8);
	  GPIOA->CRH &= ~(GPIO_CRH_MODE15);
	  //Set up floating input
	  GPIOA->CRH &= ~(GPIO_CRH_CNF8);
	  GPIOA->CRH |=  (GPIO_CRH_CNF8_0);
	  GPIOA->CRH &= ~(GPIO_CRH_CNF15);
	  GPIOA->CRH |=  (GPIO_CRH_CNF15_0);
	 //Because PA15 is JTAG --> REmap
	  RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;
	  RCC->APB1ENR |= RCC_APB1ENR_PWREN;
	  AFIO->MAPR &= ~(AFIO_MAPR_SWJ_CFG);
	  AFIO->MAPR  |= AFIO_MAPR_SWJ_CFG_1;
}

/*
 * @brief Read slide SW1, SW2
 */

bool gpio_SW1_Read(void)
{

}
bool gpio_SW2_Read(void)
{

}
